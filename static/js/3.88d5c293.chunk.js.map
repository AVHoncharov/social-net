{"version":3,"sources":["components/Content/Profile/ProfileInfo/ProfileInfo.module.css","components/Content/Profile/MyPosts/MyPosts.module.css","components/Content/Profile/MyPosts/Post/Post.module.css","components/Content/Profile/Profile.module.css","components/Content/Profile/MyPosts/Post/Post.jsx","components/Content/Profile/MyPosts/MyPosts.jsx","components/Content/Profile/MyPosts/MyPostsContainer.jsx","components/Content/Profile/ProfileInfo/ProfileStatus.jsx","components/Content/Profile/ProfileInfo/ProfileCommonInfoForm.jsx","components/Content/Profile/ProfileInfo/ProfileContactsForm.jsx","components/Content/Profile/ProfileInfo/ProfileInfo.jsx","components/Content/Profile/Profile.jsx","components/Content/Profile/ProfileContainer.jsx"],"names":["module","exports","Post","props","className","style","item","message","like","likeCount","MyPosts","React","memo","postsElements","profilePage","posts","map","p","id","postsBlock","ReduxAddNewPostForm","onSubmit","data","addPost","newPostText","maxLength50","maxLengthCreator","Textarea","Element","reduxForm","form","handleSubmit","Field","component","validate","name","placeholder","MyPostsContainer","connect","state","dispatch","addPostActionCreator","ProfileStatus","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","onBlur","updateStatus","autoFocus","Input","ProfileCommonInfoReduxForm","error","createField","type","formStyle","formSummaryError","ProfileContactsReduxForm","profile","Object","keys","contacts","key","contactBlock","contactName","ProfileCommonInfo","isOwner","turnOnEditMode","onClick","fullName","toUpperCase","lookingForAJob","lookingForAJobDescription","aboutMe","Contacts","contactTitle","contactValue","ProfileInfo","editContactsMode","setEditContactsMode","profileInfo","profileAvatarBlock","for","src","photos","large","userDefaultAvatarSmall","alt","profielAvatarImg","selfProfile","title","inputAvatarPhotoTag","files","length","savePhoto","profileDesciptionBlock","contactsList","initialValues","formData","saveProfile","then","entries","contact","profileCommonInfoBlock","Profile","Preloader","ProfileContainer","refreshProfile","userId","match","params","authorizedUserId","history","push","getProfile","getStatus","this","prevProps","prevState","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.88d5c293.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo\":\"ProfileInfo_profileInfo__197CX\",\"profileAvatarBlock\":\"ProfileInfo_profileAvatarBlock__1zzS9\",\"profileDesciptionBlock\":\"ProfileInfo_profileDesciptionBlock__2KyXx\",\"profileCommonInfoBlock\":\"ProfileInfo_profileCommonInfoBlock__3PgoP\",\"profielAvatarImg\":\"ProfileInfo_profielAvatarImg__19-uj\",\"selfProfile\":\"ProfileInfo_selfProfile__f6sss\",\"inputAvatarPhotoTag\":\"ProfileInfo_inputAvatarPhotoTag__2Cc8-\",\"contactsList\":\"ProfileInfo_contactsList__cQwiq\",\"contactBlock\":\"ProfileInfo_contactBlock__NdYRz\",\"contactName\":\"ProfileInfo_contactName__25bu-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__8zEAT\",\"posts\":\"MyPosts_posts__2yI-c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__21Gy6\",\"like\":\"Post_like__1biSz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3SicN\"};","import React from \"react\";\r\nimport style from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={style.item}>\r\n      {props.message}\r\n      <div>\r\n        <span className={style.like}>like - {props.likeCount}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport style from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport {\r\n  maxLengthCreator,\r\n  required,\r\n} from \"./../../../../utils/validators/validators\";\r\nimport { Element } from \"./../../../common/FormsControls/FormsControls\";\r\n\r\nconst MyPosts = React.memo((props) => {\r\n  let postsElements = props.profilePage.posts.map((p) => (\r\n    <Post id={p.id} message={p.message} likeCount={p.likeCount} />\r\n  ));\r\n\r\n  let onAddNewPost = (data) => {\r\n    props.addPost(data.newPostText);\r\n  };\r\n\r\n  return (\r\n    <div className={style.postsBlock}>\r\n      <div>\r\n        <h3>My posts</h3>\r\n        <ReduxAddNewPostForm onSubmit={onAddNewPost} />\r\n        <div className={style.posts}>{postsElements}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\nconst Textarea = Element(\"textarea\");\r\n\r\nconst AddNewPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <Field\r\n        component={Textarea}\r\n        validate={[maxLength50]}\r\n        name=\"newPostText\"\r\n        placeholder=\"Enter you new post\"\r\n      />\r\n      <div>\r\n        <button>New Post</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst ReduxAddNewPostForm = reduxForm({ form: \"newPostTextForm\" })(\r\n  AddNewPostForm\r\n);\r\n\r\nexport default MyPosts;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  addPostActionCreator\r\n} from \"../../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        profilePage: state.profilePage\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {dispatch(addPostActionCreator(newPostText));}\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport style from \"./ProfileStatus.module\";\r\n\r\nconst ProfileStatus = (props) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(()=>{\r\n    setStatus(props.status);\r\n  },[props.status]);\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  };\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {!editMode && (\r\n        <div>\r\n          <span onDoubleClick={activateEditMode}>\r\n            {props.status || \"------\"}\r\n          </span>\r\n        </div>\r\n      )}\r\n\r\n      {editMode && (\r\n        <div>\r\n          <input\r\n            onChange={onStatusChange}\r\n            onBlur={deactivateEditMode}\r\n            autoFocus={true}\r\n            value={status}\r\n          ></input>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileStatus;\r\n","import React from \"react\";\r\nimport { reduxForm } from \"redux-form\";\r\nimport { createField } from \"../../../common/FormsControls/FormsControls\";\r\nimport { Element } from './../../../common/FormsControls/FormsControls';\r\nimport formStyle from '../../../common/FormsControls/FormsControls.module.css'\r\n\r\nconst Input = Element('input');\r\n\r\nconst ProfileCommonInfoForm = ({handleSubmit , error}) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n        <div>\r\n            <button>save</button>\r\n        </div>\r\n\r\n        <div>\r\n          <b>Full Name</b>: {createField('Full Name', \"fullName\",[], Input)} \r\n        </div>\r\n    <div>\r\n    <b>Looking for a job</b>: {createField('', \"lookingForAJob\",[], Input, {type:'checkbox'} )}\r\n\r\n    </div>\r\n          <b>My professional scills</b>:\r\n          {createField('My professional scills', \"lookingForAJobDescription\",[], Input)}\r\n      <div>\r\n        <b>About me</b>:  {createField('About me', \"aboutMe\",[], Element('textarea'))}\r\n      </div>\r\n       {error && <div className={formStyle.formSummaryError}>\r\n            {error}\r\n          </div>}\r\n    </form>\r\n  );\r\n};\r\nconst ProfileCommonInfoReduxForm = reduxForm({form:'edit-profile-common-info',})(ProfileCommonInfoForm);\r\n\r\nexport default ProfileCommonInfoReduxForm;\r\n","import React from \"react\";\r\nimport { createElement } from \"react\";\r\nimport { reduxForm } from \"redux-form\";\r\nimport { createField } from \"../../../common/FormsControls/FormsControls\";\r\nimport { Element } from \"./../../../common/FormsControls/FormsControls\";\r\nimport style from \"./ProfileInfo.module.css\";\r\nimport formStyle from '../../../common/FormsControls/FormsControls.module.css'\r\n\r\n\r\nconst Input = Element(\"input\");\r\n\r\nconst ProfileContactsForm = ({ handleSubmit, profile, error }) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <button>save</button>  \r\n        {error && <div className={formStyle.formSummaryError}>\r\n            {error}\r\n          </div>}\r\n      </div>\r\n      <div>\r\n        {Object.keys(profile.contacts).map((key) => {\r\n          return (\r\n            <div>\r\n              <div className={style.contactBlock}>\r\n                <div className={style.contactName}><b>{key} :</b></div>\r\n                <div>{createField(key, \"contacts.\" + key, [], Input)}</div>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\nconst ProfileContactsReduxForm = reduxForm({\r\n  form: \"edit-profile-contacs-info\",\r\n})(ProfileContactsForm);\r\n\r\nexport default ProfileContactsReduxForm;\r\n","import React, { useState } from \"react\";\r\nimport style from \"./ProfileInfo.module.css\";\r\nimport userDefaultAvatarSmall from \"../../../../assets/images/avatar-default-small.png\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport ProfileCommonInfoForm from \"./ProfileCommonInfoForm\";\r\nimport ProfileCommonInfoReduxForm from \"./ProfileCommonInfoForm\";\r\nimport ProfileContactsReduxForm from \"./ProfileContactsForm\";\r\n\r\nconst ProfileInfo = (props) => {\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [editContactsMode, setEditContactsMode] = useState(false);\r\n\r\n  const onMainPhotoSelected = (e) => {\r\n    if (e.currentTarget.files.length) props.savePhoto(e.currentTarget.files[0]);\r\n  };\r\n\r\n  const onProfileCommonInfoSubmit = (formData) => {\r\n    props.saveProfile(formData);\r\n    setEditMode(false);\r\n  };\r\n  const onProfileContactsSubmit = (formData) => {\r\n    formData = {\r\n      ...formData,\r\n      ...{\r\n        fullName: props.profile.fullName,\r\n        aboutMe: props.profile.aboutMe,\r\n        lookingForAJob: props.profile.lookingForAJob,\r\n        lookingForAJobDescription: props.profile.lookingForAJobDescription,\r\n      },\r\n    };\r\n    props.saveProfile(formData).then(() => {\r\n      setEditContactsMode(false);\r\n    });\r\n  };\r\n  return (\r\n    <div className={style.profileInfo}>\r\n      <div className={style.profileAvatarBlock}>\r\n        <label for=\"input-avatar-profile-photo\">\r\n          <img\r\n            src={props.profile.photos.large || userDefaultAvatarSmall}\r\n            alt=\"\"\r\n            className={\r\n              props.isOwner\r\n                ? style.profielAvatarImg + \" \" + style.selfProfile\r\n                : style.profielAvatarImg\r\n            }\r\n            title={props.isOwner && \"Нажмите на фото для выбора нового\"}\r\n          ></img>\r\n        </label>\r\n        {props.isOwner && (\r\n          <input\r\n            id=\"input-avatar-profile-photo\"\r\n            type={\"file\"}\r\n            className={style.inputAvatarPhotoTag}\r\n            onChange={onMainPhotoSelected}\r\n          />\r\n        )}\r\n      </div>\r\n      <div className={style.profileDesciptionBlock}>\r\n        <div>\r\n          <span>{props.profile.aboutMe}</span>\r\n          <ProfileStatus\r\n            status={props.status}\r\n            updateStatus={props.updateStatus}\r\n          />\r\n        </div>\r\n        <br />\r\n        <div\r\n          onDoubleClick={() => setEditContactsMode(true)}\r\n          className={style.contactsList}\r\n        >\r\n          Contacts:\r\n          {editContactsMode ? (\r\n            <ProfileContactsReduxForm\r\n              initialValues={props.profile}\r\n              profile={props.profile}\r\n              onSubmit={onProfileContactsSubmit}\r\n            />\r\n          ) : (\r\n            Object.entries(props.profile.contacts).map((contact) => {\r\n              return (\r\n                <Contacts\r\n                  key={contact[0]}\r\n                  contactTitle={contact[0]}\r\n                  contactValue={contact[1]}\r\n                />\r\n              );\r\n            })\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className={style.profileCommonInfoBlock}>\r\n        {editMode ? (\r\n          <ProfileCommonInfoForm\r\n            initialValues={props.profile}\r\n            profile={props.profile}\r\n            onSubmit={onProfileCommonInfoSubmit}\r\n          />\r\n        ) : (\r\n          <ProfileCommonInfo\r\n            profile={props.profile}\r\n            isOwner={props.isOwner}\r\n            turnOnEditMode={() => setEditMode(true)}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ProfileCommonInfo = ({ profile, isOwner, turnOnEditMode }) => {\r\n  return (\r\n    <div>\r\n      {isOwner && (\r\n        <div>\r\n          <button onClick={turnOnEditMode}>edit</button>\r\n        </div>\r\n      )}\r\n      <div>\r\n        <span>\r\n          <b>{profile.fullName.toUpperCase()}</b>\r\n        </span>\r\n      </div>\r\n      <div>\r\n        <b>Looking for a job</b>: {profile.lookingForAJob ? \"Yes\" : \"No\"}\r\n      </div>\r\n      {profile.lookingForAJob && (\r\n        <div>\r\n          <b>My professional scills</b>: {profile.lookingForAJobDescription}\r\n        </div>\r\n      )}\r\n      <div>\r\n        <b>About me</b>: {profile.aboutMe}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Contacts = ({ contactTitle, contactValue }) => {\r\n  return (\r\n    <div>\r\n      <b>{contactTitle} :</b> {contactValue}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport style from \"./Profile.module.css\";\r\n\r\nconst Profile = (props) => {\r\n  if (!props.profile) {\r\n    return <Preloader />;\r\n  }\r\n  return (\r\n    <div className={style.profile}>\r\n      <ProfileInfo profile={props.profile} isOwner ={props.isOwner} status={props.status} updateStatus={props.updateStatus} savePhoto={props.savePhoto} saveProfile={props.saveProfile}/>\r\n      <MyPostsContainer\r\n      //    store={props.store}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\nimport { getProfile, getStatus, updateStatus, savePhoto } from \"../../../redux/profile-reducer\";\r\nimport Profile from \"./Profile\";\r\nimport { saveProfile } from './../../../redux/profile-reducer';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n  refreshProfile = () => {\r\n    let userId = this.props.match.params.userId;\r\n    if(!userId) {\r\n      userId = this.props.authorizedUserId;\r\n      if(!userId){\r\n        this.props.history.push(\"/login\");\r\n      }\r\n    }\r\n    this.props.getProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n  componentDidMount() {\r\n    this.refreshProfile();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState){\r\n    if(this.props.match.params.userId != prevProps.match.params.userId)\r\n      this.refreshProfile();\r\n  }\r\n\r\n  render() {\r\n    return <Profile \r\n    {...this.props} \r\n    isOwner={!this.props.match.params.userId}\r\n    profile={this.props.profile} \r\n    status={this.props.status} \r\n    updateStatus={this.props.updateStatus}\r\n    savePhoto={this.props.savePhoto}/>;\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getProfile, getStatus, updateStatus, savePhoto, saveProfile }),\r\n  withRouter,\r\n)(ProfileContainer);"],"sourceRoot":""}