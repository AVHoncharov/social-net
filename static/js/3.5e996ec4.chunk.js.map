{"version":3,"sources":["components/Content/Profile/MyPosts/MyPosts.module.css","components/Content/Profile/MyPosts/Post/Post.module.css","components/Content/Profile/ProfileInfo/ProfileInfo.module.css","components/Content/Profile/Profile.module.css","components/Content/Profile/MyPosts/Post/Post.jsx","components/Content/Profile/MyPosts/MyPosts.jsx","components/Content/Profile/MyPosts/MyPostsContainer.jsx","components/Content/Profile/ProfileInfo/ProfileStatus.jsx","components/Content/Profile/ProfileInfo/ProfileInfo.jsx","components/Content/Profile/Profile.jsx","components/Content/Profile/ProfileContainer.jsx"],"names":["module","exports","Post","props","className","style","item","message","like","likeCount","MyPosts","React","memo","postsElements","profilePage","posts","map","p","id","postsBlock","ReduxAddNewPostForm","onSubmit","data","addPost","newPostText","maxLength50","maxLengthCreator","Textarea","Element","reduxForm","form","handleSubmit","Field","component","validate","name","placeholder","MyPostsContainer","connect","state","dispatch","addPostActionCreator","ProfileStatus","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","onBlur","updateStatus","autoFocus","ProfileInfo","profileInfo","profileAvatarBlock","src","profile","photos","large","userDefaultAvatarSmall","alt","profielAvatarImg","profileDesciptionBlock","aboutMe","Object","entries","contacts","arr","profileCommonInfoBlock","padding","fullName","toUpperCase","Profile","Preloader","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getProfile","getStatus","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.5e996ec4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__8zEAT\",\"posts\":\"MyPosts_posts__2yI-c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__21Gy6\",\"like\":\"Post_like__1biSz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo\":\"ProfileInfo_profileInfo__197CX\",\"profileAvatarBlock\":\"ProfileInfo_profileAvatarBlock__1zzS9\",\"profileDesciptionBlock\":\"ProfileInfo_profileDesciptionBlock__2KyXx\",\"profileCommonInfoBlock\":\"ProfileInfo_profileCommonInfoBlock__3PgoP\",\"profielAvatarImg\":\"ProfileInfo_profielAvatarImg__19-uj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3SicN\"};","import React from \"react\";\r\nimport style from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={style.item}>\r\n      {props.message}\r\n      <div>\r\n        <span className={style.like}>like - {props.likeCount}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport style from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport {\r\n  maxLengthCreator,\r\n  required,\r\n} from \"./../../../../utils/validators/validators\";\r\nimport { Element } from \"./../../../common/FormsControls/FormsControls\";\r\n\r\nconst MyPosts = React.memo((props) => {\r\n  let postsElements = props.profilePage.posts.map((p) => (\r\n    <Post id={p.id} message={p.message} likeCount={p.likeCount} />\r\n  ));\r\n\r\n  let onAddNewPost = (data) => {\r\n    props.addPost(data.newPostText);\r\n  };\r\n\r\n  return (\r\n    <div className={style.postsBlock}>\r\n      <div>\r\n        <h3>My posts</h3>\r\n        <ReduxAddNewPostForm onSubmit={onAddNewPost} />\r\n        <div className={style.posts}>{postsElements}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\nconst Textarea = Element(\"textarea\");\r\n\r\nconst AddNewPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <Field\r\n        component={Textarea}\r\n        validate={[maxLength50]}\r\n        name=\"newPostText\"\r\n        placeholder=\"Enter you new post\"\r\n      />\r\n      <div>\r\n        <button>New Post</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst ReduxAddNewPostForm = reduxForm({ form: \"newPostTextForm\" })(\r\n  AddNewPostForm\r\n);\r\n\r\nexport default MyPosts;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  addPostActionCreator\r\n} from \"../../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        profilePage: state.profilePage\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {dispatch(addPostActionCreator(newPostText));}\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport style from \"./ProfileStatus.module\";\r\n\r\nconst ProfileStatus = (props) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(()=>{\r\n    setStatus(props.status);\r\n  },[props.status]);\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  };\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {!editMode && (\r\n        <div>\r\n          <span onDoubleClick={activateEditMode}>\r\n            {props.status || \"------\"}\r\n          </span>\r\n        </div>\r\n      )}\r\n\r\n      {editMode && (\r\n        <div>\r\n          <input\r\n            onChange={onStatusChange}\r\n            onBlur={deactivateEditMode}\r\n            autoFocus={true}\r\n            value={status}\r\n          ></input>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileStatus;\r\n","import React from \"react\";\r\nimport style from \"./ProfileInfo.module.css\";\r\nimport userDefaultAvatarSmall from \"../../../../assets/images/avatar-default-small.png\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\n\r\n\r\nconst ProfileInfo = (props) => {\r\n  return (\r\n    <div className={style.profileInfo}>\r\n      <div className={style.profileAvatarBlock}>\r\n        <img src={props.profile.photos.large || userDefaultAvatarSmall} alt=\"\" className={style.profielAvatarImg}></img>\r\n      </div>\r\n      <div className={style.profileDesciptionBlock}>\r\n        <div>\r\n        <span>{props.profile.aboutMe}</span>\r\n          <ProfileStatus  status={props.status} updateStatus={props.updateStatus}/>\r\n        </div>\r\n        <div>\r\n                {Object.entries(props.profile.contacts).map((arr) => {\r\n                    return (\r\n                        <p>\r\n                            <b>{arr[0]}:</b> {arr[1]} \r\n                        </p>\r\n                    )\r\n                })}\r\n        </div>\r\n      </div>\r\n        <div className={style.profileCommonInfoBlock}>\r\n            <div>\r\n                <span style={{padding: '25px'}}><b>{props.profile.fullName.toUpperCase()}</b></span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport style from \"./Profile.module.css\";\r\n\r\nconst Profile = (props) => {\r\n  if (!props.profile) {\r\n    return <Preloader />;\r\n  }\r\n  return (\r\n    <div className={style.profile}>\r\n      <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n      <MyPostsContainer\r\n      //    store={props.store}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\nimport { getProfile, getStatus, updateStatus } from \"../../../redux/profile-reducer\";\r\nimport Profile from \"./Profile\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId;\r\n    if(!userId) {\r\n      userId = this.props.authorizedUserId;\r\n      if(!userId){\r\n        this.props.history.push(\"/login\");\r\n      }\r\n    }\r\n    this.props.getProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n\r\n  render() {\r\n    return <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus}/>;\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getProfile, getStatus, updateStatus }),\r\n  withRouter,\r\n)(ProfileContainer);"],"sourceRoot":""}